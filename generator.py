#testbench generator
def generate_verilog_file(petals, period):
    with open('testbench.v', 'w') as file:
        file.write("module tb();\n")
        file.write("\n")
        file.write("  reg [63:0] A;\n")
        file.write("  wire signed [63:0] B;\n")
        file.write("  reg [15:0] i;\n")
        file.write("  real petals;\n")
        file.write("  real temp;\n")
        file.write("  integer f;\n")
        file.write("\n")
        file.write("  sin sin_inst(A, B);\n")
        file.write("\n")
        file.write("  initial begin\n")
        file.write("    f = $fopen(\"data.txt\",\"w\");\n")
        file.write("    petals = {};\n".format(petals))
        file.write("\n")
        file.write("    for(i = 0; i <= 3140*{}; i = i + 10) begin\n".format(period))
        file.write("      temp = i; temp = temp * petals;\n")
        file.write("      A = temp;\n")
        file.write("      #10;\n")
        file.write("      if(B < 0) begin\n")
        file.write("        if(B/1000 < 0) begin\n")
        file.write("          $fwrite(f, \"%1d.%03d,    %1d.%03d\\n\", B/1000, -1*B%1000, i/1000, i%1000);\n")
        file.write("        end\n")
        file.write("        else begin\n")
        file.write("          $fwrite(f, \"-%1d.%03d,    %1d.%03d\\n\", B/1000, -1*B%1000, i/1000, i%1000);\n")
        file.write("        end\n")
        file.write("      end\n")
        file.write("      else begin\n")
        file.write("        $fwrite(f, \"%1d.%03d,    %1d.%03d\\n\", B/1000, B%1000, i/1000, i%1000);\n")
        file.write("      end\n")
        file.write("    end\n")
        file.write("    $fclose(f);\n")
        file.write("    $finish;\n")
        file.write("  end\n")
        file.write("\n")
        file.write("endmodule\n")